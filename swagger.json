{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Documentation for Sample API",
    "title": "My Sample API New",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/501": {
      "get": {
        "description": "Return a not implemented error",
        "tags": [
          "dev"
        ],
        "operationId": "err501",
        "responses": {
          "501": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/member": {
      "put": {
        "description": "Return a updated member",
        "tags": [
          "members"
        ],
        "operationId": "updateMember",
        "parameters": [
          {
            "description": "Member data structure to Create or Update.",
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Member"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/memberResponse"
          },
          "400": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "post": {
        "description": "Return a newly created member",
        "tags": [
          "members"
        ],
        "operationId": "createMember",
        "parameters": [
          {
            "description": "Member data structure to Create or Update.",
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Member"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/memberResponse"
          },
          "501": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/member/{memid}": {
      "delete": {
        "description": "Deletes a member",
        "tags": [
          "members"
        ],
        "operationId": "delMember",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "ID of memeber",
            "name": "memid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/noContentResponse"
          },
          "400": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/members": {
      "get": {
        "description": "Return a list of memebers from the database",
        "tags": [
          "members"
        ],
        "operationId": "listMembers",
        "responses": {
          "200": {
            "$ref": "#/responses/membersResponse"
          }
        }
      }
    },
    "/teams": {
      "get": {
        "description": "Return a list of teams from the database",
        "tags": [
          "teams"
        ],
        "operationId": "listTeams",
        "responses": {
          "200": {
            "$ref": "#/responses/teamsResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "GenericError": {
      "description": "GenericError is a generic error message returned by a server",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "gorilla/internal/data"
    },
    "Member": {
      "description": "Member defines the structure for an API product",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "teamID": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "TeamId"
        }
      },
      "x-go-package": "gorilla/internal/data"
    },
    "Team": {
      "description": "Team defines the structure for an API product",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id"
        },
        "leader": {
          "$ref": "#/definitions/Member"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "gorilla/internal/data"
    }
  },
  "responses": {
    "errorResponse": {
      "description": "Generic error message returned as a string",
      "schema": {
        "$ref": "#/definitions/GenericError"
      }
    },
    "memberResponse": {
      "description": "A member",
      "schema": {
        "$ref": "#/definitions/Member"
      }
    },
    "membersResponse": {
      "description": "A list of members",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Member"
        }
      }
    },
    "noContentResponse": {
      "description": "No content is returned by this API endpoint"
    },
    "teamsResponse": {
      "description": "A list of teams",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Team"
        }
      }
    }
  }
}